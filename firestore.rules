rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }
    function isUser(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }

    // --- Collection Rules ---

    // MANUAL OVERRIDE: To break the deadlock, we are simplifying this rule.
    // Any authenticated user can read THEIR OWN profile. This is the key to fixing the entire system.
    match /users/{userId} {
      allow get: if isUser(userId);
      // For this test, we are disabling all other operations on the users collection from the app.
      // Admin should use the Firebase Console for user management for now.
      allow list, create, update, delete: if false;
    }

    // --- READ-ONLY DATA FOR GURUS ---
    // Any authenticated user can read this data. Writes are disabled for gurus for safety.
    match /siswa/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /bobot/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /academicYearConfigs/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /kkm_settings/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /mataPelajaranMaster/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /pengumuman/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    match /schoolConfig/{docId} { allow read: if isAuthenticated(); allow write: if false; }
    
    // --- GURU CRUD RULES (THE MANUAL FIX) ---
    // The following rules are simplified to their core function: a user can manage their own documents.
    // This avoids calling complex helper functions for write operations, breaking the deadlock.

    match /nilai/{docId} {
      allow read: if isAuthenticated();
      // A user can create/update/delete a grade if their UID matches the teacherUid in the document.
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.teacherUid;
    }

    match /agenda_kelas/{docId} {
      allow read: if isAuthenticated();
      // A user can write an agenda if their UID matches the teacherUid in the document.
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.teacherUid;
    }

    match /laporan_kegiatan/{docId} {
      allow read: if isAuthenticated();
      // A user can write a report if their UID matches the createdByUid in the document.
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.createdByUid;
    }

    match /pelanggaran_siswa/{docId} {
      allow read: if isAuthenticated();
      // A user can write a violation if their UID matches the recordedByUid in the document.
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.recordedByUid;
    }

    match /teacherDailyAttendance/{docId} {
      allow read: if isAuthenticated();
      // This rule was already simple and correct, so we keep it.
      allow create: if isAuthenticated() && request.resource.data.teacherUid == request.auth.uid;
      // Admin edits from the app are disabled for this test to ensure gurus can work.
      allow update, delete: if false;
    }
    
    // Disable access to these collections from the app for now to keep things simple.
    match /activity_logs/{docId} { allow read, write: if false; }
    match /teacherAttendance/{docId} { allow read, write: if false; }
  }
}
