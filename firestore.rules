rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // These helpers are now safe to use because the 'users' rule below is fixed.
    function isAuthenticated() { return request.auth != null; }
    function isUser(uid) { return isAuthenticated() && request.auth.uid == uid; }
    function getUserData() { return get(/databases/$(database)/documents/users/$(request.auth.uid)).data; }
    function isAdmin() { return isAuthenticated() && getUserData().role == 'admin'; }
    function isGuru() { return isAuthenticated() && getUserData().role == 'guru'; }
    function hasTugas(tugas) { return isGuru() && tugas in getUserData().tugasTambahan; }
    function isKepalaSekolah() { return hasTugas('kepala_sekolah'); }
    function isKesiswaan() { return hasTugas('kesiswaan'); }
    function isKepalaTataUsaha() { return hasTugas('kepala_tata_usaha'); }

    // --- Collection Rules ---

    // FIX: This rule is rewritten to prevent a deadlock loop.
    // It explicitly checks the authenticated user's role without calling helper functions
    // that would in turn read from this same collection.
    match /users/{userId} {
      allow get: if request.auth.uid == userId || (
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
      allow list: if isAdmin(); // This now works because the `get` in isAdmin() is allowed.
      allow create, delete: if isAdmin();
      allow update: if isUser(userId) || isAdmin();
    }

    match /siswa/{docId} {
      allow read: if isAdmin() || isGuru();
      allow write: if isAdmin();
    }

    // FIX: Simplified rules to allow any guru to CRUD their own data.
    match /nilai/{docId} {
      allow get: if isAdmin() || isKepalaSekolah() || (isGuru() && resource.data.teacherUid == request.auth.uid);
      allow list: if isAdmin() || isGuru();
      allow create, update: if isAdmin() || (isGuru() && request.resource.data.teacherUid == request.auth.uid);
      allow delete: if isAdmin() || (isGuru() && resource.data.teacherUid == request.auth.uid);
    }

    // FIX: Simplified rules to allow any guru to CRUD their own data.
    match /agenda_kelas/{docId} {
      allow get: if isAdmin() || isKepalaSekolah() || (isGuru() && resource.data.teacherUid == request.auth.uid);
      allow list: if isAdmin() || isGuru();
      allow create, update: if isAdmin() || (isGuru() && request.resource.data.teacherUid == request.auth.uid);
      allow delete: if isAdmin() || (isGuru() && resource.data.teacherUid == request.auth.uid);
    }

    // FIX: Simplified rules to allow any guru to CRUD their own data.
    match /laporan_kegiatan/{docId} {
      allow get: if isAdmin() || isKepalaSekolah() || (isGuru() && resource.data.createdByUid == request.auth.uid);
      allow list: if isAdmin() || isGuru();
      allow create: if isGuru() && request.resource.data.createdByUid == request.auth.uid;
      allow update, delete: if isAdmin() || (isGuru() && resource.data.createdByUid == request.auth.uid);
    }

    match /pelanggaran_siswa/{docId} {
      allow read: if isAdmin() || isKepalaSekolah() || isKesiswaan() || hasTugas('bk');
      allow create: if isGuru() && (isKesiswaan() || hasTugas('bk'));
      allow update, delete: if isAdmin() || isKesiswaan() || hasTugas('bk');
    }
    
    // --- Config & Log Collections ---
    match /bobot/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /activity_logs/{docId} { allow read, write: if isAdmin(); }
    match /academicYearConfigs/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /kkm_settings/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /mataPelajaranMaster/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /pengumuman/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /schoolConfig/{docId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }

    // --- Attendance Collections ---
    match /teacherDailyAttendance/{docId} {
      allow get: if isAdmin() || isKepalaSekolah() || (isGuru() && docId.split('_')[0] == request.auth.uid);
      allow list: if isAdmin() || isGuru();
      allow create: if isGuru() && request.resource.data.teacherUid == request.auth.uid;
      allow update, delete: if isAdmin();
    }

    match /teacherAttendance/{docId} {
      allow read, write: if isAdmin() || isKepalaSekolah();
    }
  }
}
