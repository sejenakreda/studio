rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is a guru
    function isGuru() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'guru';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can manage any user profile
      allow read, write: if isAdmin();
      // Users can read and update their own profile, but not change their role
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && request.auth.uid == userId
                      && !('role' in request.resource.data);
    }
    
    // Rules for 'bobot' (weights) collection
    match /bobot/{docId} {
      // Only admins can read or write weight configurations
      allow read, write: if isAdmin();
    }
    
    // Rules for 'siswa' (students) collection
    match /siswa/{docId} {
      // Admins can manage student data
      allow read, write, delete: if isAdmin();
      // Gurus can read student data
      allow read: if isGuru();
    }
    
    // Rules for 'nilai' (grades) collection
    match /nilai/{docId} {
      // Admins can manage all grade data
      allow read, write, delete: if isAdmin();
      
      // Gurus can read any grade
      allow read: if isGuru();
      
      // Gurus can create/update/delete grades they own
      allow create, update, delete: if isGuru() && request.resource.data.teacherUid == request.auth.uid;
    }

    // Rules for 'activity_logs' collection
    match /activity_logs/{docId} {
        // Admins can read all logs
        allow read: if isAdmin();
        // Any authenticated user (admin or guru) can create logs
        allow create: if isAuthenticated();
        // No one can update or delete logs to ensure integrity
        allow update, delete: if false;
    }
    
    // Rules for 'academicYearConfigs' collection
    match /academicYearConfigs/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    // Rules for 'kkm_settings' collection
    match /kkm_settings/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    // Rules for 'mataPelajaranMaster' collection
    match /mataPelajaranMaster/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    // Rules for 'pengumuman' collection
    match /pengumuman/{docId} {
        allow read: if isAuthenticated(); // All authenticated users can read
        allow write, delete: if isAdmin(); // Only admins can create/update/delete
    }

    // Rules for 'teacherDailyAttendance' collection
    match /teacherDailyAttendance/{docId} {
        // Admins can read and write/delete any record
        allow read, write: if isAdmin();
        
        // Gurus can read their own records
        allow read: if isGuru() && resource.data.teacherUid == request.auth.uid;
        
        // Gurus can create their own record, but not update it through this rule
        allow create: if isGuru() && request.resource.data.teacherUid == request.auth.uid;
    }
    
    // Rules for general school configuration (profile, print settings)
    match /schoolConfig/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Rules for 'pelanggaran_siswa' (student violations)
    match /pelanggaran_siswa/{docId} {
      // Admins can read/delete any record
      allow read, delete: if isAdmin();
      // Gurus with specific roles (Kesiswaan or BK) can create and read
      allow create, read: if isGuru();
    }
    
    // Rules for 'laporan_kegiatan'
    match /laporan_kegiatan/{docId} {
      allow read: if isAdmin();
      allow create, update, delete, read: if isGuru() && request.auth.uid == resource.data.createdByUid;
    }

    // Rules for 'agenda_kelas'
    match /agenda_kelas/{docId} {
      allow read: if isAdmin();
      allow create, update, delete, read: if isGuru() && request.auth.uid == resource.data.teacherUid;
    }

  }
}
