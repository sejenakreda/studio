
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== Helper Functions =====
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function getMyRole() {
      // Get the user's role from their profile in the 'users' collection
      return getUserData(request.auth.uid).role;
    }
    
    function getMyTugasTambahan() {
      return getUserData(request.auth.uid).tugasTambahan;
    }

    function isAdmin() {
      return isSignedIn() && getMyRole() == 'admin';
    }

    function isGuru() {
      return isSignedIn() && getMyRole() == 'guru';
    }
    
    // A supervisor is a user who can view reports from others.
    function isSupervisor() {
      return isSignedIn() && getMyTugasTambahan().hasAny(['kepala_sekolah', 'kurikulum', 'kesiswaan', 'bendahara', 'kepala_tata_usaha']);
    }

    // ===== Default Rule: Deny All =====
    match /{document=**} {
      allow read, write: if false;
    }

    // ===== Collection Rules =====

    // --- User Profiles ---
    match /users/{userId} {
      // Any signed-in user can read basic profile data (needed for name displays, etc.).
      allow read: if isSignedIn();
      // An admin can update any user profile. A user can update their own.
      allow update: if isAdmin() || isOwner(userId);
      // Only admins can create new users or delete existing ones.
      allow create, delete: if isAdmin();
    }
    
    // --- Students ---
    match /siswa/{studentId} {
      // Any signed-in user can read the list of students.
      allow read: if isSignedIn();
      // Only admins can add, change, or remove students from the master list.
      allow create, update, delete: if isAdmin();
    }
    
    // --- Grades ---
    match /nilai/{gradeId} {
      // Admins, supervisors, and the grade owner can read the data.
      allow read: if isAdmin() || isSupervisor() || isOwner(resource.data.teacherUid);
      // Only users with the 'guru' role can create or update grades.
      allow create, update: if isGuru();
      // Only admins have the power to delete grade records.
      allow delete: if isAdmin();
    }
    
    // --- Academic Settings ---
    match /bobot/global_weights {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /mataPelajaranMaster/{mapelId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    match /academicYearConfigs/{yearId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }
    
    match /kkm_settings/{kkmId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }

    // --- Communication & Reports ---
    match /pengumuman/{announcementId} {
        allow read: if isSignedIn();
        allow create, delete: if isAdmin();
    }

    match /teacherDailyAttendance/{dailyId} {
       // Admins, supervisors, and the attendance owner can read it.
       allow read: if isAdmin() || isSupervisor() || isOwner(dailyId.split('_')[0]);
       // A teacher can submit their own attendance. An admin can edit it.
       allow create, update: if isOwner(dailyId.split('_')[0]) || isAdmin();
       allow delete: if isAdmin();
    }
    
    match /pelanggaran_siswa/{violationId} {
        // Any teacher or admin can read violations.
        allow read: if isGuru() || isAdmin();
        // Any teacher can record a violation.
        allow create: if isGuru();
        // Only admins can update or delete.
        allow update, delete: if isAdmin();
    }
    
    match /laporan_kegiatan/{reportId} {
        // Admins, supervisors, and the report owner can read it.
        allow read: if isAdmin() || isSupervisor() || isOwner(resource.data.createdByUid);
        allow create: if isGuru();
        // A guru can edit/delete their own reports. Admins can manage all.
        allow update, delete: if isAdmin() || isOwner(resource.data.createdByUid);
    }
    
    match /agenda_kelas/{agendaId} {
        // Admins, supervisors, and the agenda owner can read it.
        allow read: if isAdmin() || isSupervisor() || isOwner(resource.data.teacherUid);
        allow create: if isGuru();
        // A guru can edit/delete their own agendas. Admins can manage all.
        allow update, delete: if isAdmin() || isOwner(resource.data.teacherUid);
    }

    // --- System & Config ---
    match /schoolConfig/main_profile {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /activity_logs/{logId} {
      allow read, write: if isAdmin();
    }
  }
}
