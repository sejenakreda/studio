
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== Helper Functions =====
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole() {
      // Get the user's role from their profile in the 'users' collection
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getRole() == 'admin';
    }

    function isGuru() {
        return isSignedIn() && getRole() == 'guru';
    }
    
    function isKepalaSekolah() {
        return isSignedIn() && 'kepala_sekolah' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tugasTambahan;
    }
    
    function isKepalaTataUsaha() {
        return isSignedIn() && 'kepala_tata_usaha' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tugasTambahan;
    }

    // ===== Default Rule: Deny All =====
    // By default, no one can read or write to any document.
    // Specific rules below will grant access.
    match /{document=**} {
      allow read, write: if false;
    }

    // ===== Collection Rules =====

    // --- User Profiles ---
    // Rules for the 'users' collection
    match /users/{userId} {
      // An admin can read/update any user profile.
      // A user can read/update their own profile.
      allow read, update: if isAdmin() || isOwner(userId);
      // Only admins can create new users or delete existing ones.
      allow create, delete: if isAdmin();
    }
    
    // --- Students ---
    // Rules for the 'siswa' collection
    match /siswa/{studentId} {
      // Any signed-in user (admin or guru) can read the list of students.
      allow read: if isSignedIn();
      // Only admins can add, change, or remove students from the master list.
      allow create, update, delete: if isAdmin();
    }
    
    // --- Grades ---
    // Rules for the 'nilai' collection
    match /nilai/{gradeId} {
      // Any signed-in user can read grade data (for reports, etc.).
      allow read: if isSignedIn();
      // Only users with the 'guru' role can create or update grades.
      allow create, update: if isGuru();
      // Only admins have the power to delete grade records.
      allow delete: if isAdmin();
    }
    
    // --- Academic Settings (Bobot, KKM, Mapel, etc.) ---
    // These collections hold critical settings for the entire application.
    
    // Global grade weights
    match /bobot/global_weights {
      allow read: if isSignedIn(); // All users can read weights for calculations.
      allow write: if isAdmin(); // Only admins can change weights.
    }
    
    // Master list of subjects
    match /mataPelajaranMaster/{mapelId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // Active academic years
    match /academicYearConfigs/{yearId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }
    
    // KKM (Minimum Passing Grade) settings
    match /kkm_settings/{kkmId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isAdmin();
    }

    // --- Communication & Reports ---
    
    // Announcements
    match /pengumuman/{announcementId} {
        allow read: if isSignedIn();
        allow create, delete: if isAdmin();
    }

    // Daily teacher attendance records
    match /teacherDailyAttendance/{dailyId} {
       // Admins can read any record. A teacher can read their own records.
       allow read: if isAdmin() || (isGuru() && resource.data.teacherUid == request.auth.uid);
       // A teacher can create their own attendance record. An admin can create/edit any.
       allow create, update: if (isGuru() && request.resource.data.teacherUid == request.auth.uid) || isAdmin();
       // Only admin can delete.
       allow delete: if isAdmin();
    }
    
    // Student Violations
    match /pelanggaran_siswa/{violationId} {
        // Any teacher role can read, Kesiswaan and Admin can manage fully.
        allow read: if isGuru();
        allow create: if isGuru();
        allow update, delete: if isAdmin();
    }

    // Activity Reports (Kesiswaan, Pembina, etc.)
    match /laporan_kegiatan/{reportId} {
        // Admins, Kepsek, and Kepala TU can read all reports. Gurus can read their own.
        allow read: if isAdmin() || isKepalaSekolah() || isKepalaTataUsaha() || (isGuru() && resource.data.createdByUid == request.auth.uid);
        allow create: if isGuru();
        // A guru can edit/delete their own reports. Admins can manage all.
        allow update, delete: if isAdmin() || (isGuru() && resource.data.createdByUid == request.auth.uid);
    }
    
    // Class Agendas
    match /agenda_kelas/{agendaId} {
        // Admins can read all agendas. A guru can read their own.
        allow read: if isAdmin() || (isGuru() && resource.data.teacherUid == request.auth.uid);
        allow create: if isGuru();
        // A guru can edit/delete their own agendas. Admins can manage all.
        allow update, delete: if isAdmin() || (isGuru() && resource.data.teacherUid == request.auth.uid);
    }

    // --- System & Config ---
    
    // School Profile
    match /schoolConfig/main_profile {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    // Activity Logs
    match /activity_logs/{logId} {
      // Only admins can read or write to the activity log.
      allow read, write: if isAdmin();
    }
  }
}
